/* üìÅ css/components/animations.css */

/* Anima√ß√£o de Fade In */
@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}
.animate-fadeIn {
    animation: fadeIn 0.5s ease-in-out forwards;
}

/* Anima√ß√£o de Slide In de Baixo */
@keyframes slideInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}
.animate-slideInUp {
    animation: slideInUp 0.5s ease-out forwards;
}

/* Anima√ß√£o de Pulse (para badges ou alertas) */
@keyframes pulse {
    0% { transform: scale(1); box-shadow: 0 0 0 0 rgba(233, 30, 99, 0.4); } /* Rosa Pink com alpha */
    70% { transform: scale(1.05); box-shadow: 0 0 0 10px rgba(233, 30, 99, 0); }
    100% { transform: scale(1); box-shadow: 0 0 0 0 rgba(233, 30, 99, 0); }
}
.animate-pulse {
    animation: pulse 1.5s infinite;
}

/* Efeito de Hover Suave (pode ser aplicado a cards, bot√µes) */
.hover-lift {
    transition: transform 0.2s ease-out, box-shadow 0.2s ease-out;
}
.hover-lift:hover {
    transform: translateY(-3px);
    box-shadow: var(--sombra-media);
}

/* Transi√ß√µes Padr√£o (j√° definidas em variables.css, mas pode refor√ßar) */
.transition-default {
    transition: var(--transicao-padrao);
}

/* Spinner de Carregamento Simples */
.spinner {
    width: 40px;
    height: 40px;
    border: 4px solid var(--rosa-clarinho);
    border-top-color: var(--rosa-pink);
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin: var(--espaco-l) auto; /* Centralizar spinner */
}

@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}

/* Anima√ß√£o para Toasts/Notifica√ß√µes */
@keyframes toastInRight {
    from {
        transform: translateX(100%);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}
@keyframes toastOutRight {
    from {
        transform: translateX(0);
        opacity: 1;
    }
    to {
        transform: translateX(100%);
        opacity: 0;
    }
}

.toast-notification { /* Classe para o container do toast */
    position: fixed;
    top: calc(var(--header-height) + var(--espaco-m));
    right: var(--espaco-m);
    background-color: var(--preto-texto);
    color: var(--branco);
    padding: var(--espaco-s) var(--espaco-m);
    border-radius: var(--borda-raio-m);
    box-shadow: var(--sombra-media);
    z-index: var(--z-index-toast);
    animation-duration: 0.3s;
    animation-fill-mode: forwards;
}
.toast-notification.success { background-color: var(--verde-sucesso); }
.toast-notification.error { background-color: var(--vermelho-erro); }
.toast-notification.info { background-color: var(--azul-info); }

.toast-notification.show { animation-name: toastInRight; }
.toast-notification.hide { animation-name: toastOutRight; }
